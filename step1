#!/bin/bash
#
# Copyright 2015, Aaron W. @ohdns.org
# All Rights Reserved.
# This software may be freely redistributed and/or modified under the
# terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2, or (at your option) any
# later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING. If not, write to the
# Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
# Author: Aaron W. <githubspam@ohdns.org>
#
# do little harm.
/usr/bin/renice 19 -p $$ > /dev/null 2>&1
#
#  This script assumes that:
#   You have ISOs in ~/build/centos7_simple_kickstart/isos
#   Your VM's will live in ~/build/centos7_simple_kickstart/vm/__instance_name__
#
#  We are avoiding Vagrant on purpose so that you may
#  create this same environment anywhere.
#
# We need the extensionpack to get PXE for installing the first host, the kickstart server itself.
#  You can avoid that requirement by manually hitting the tab key when the ISO boots,
#  backing over the word "quiet" and typing:
#   cmdline nicdelay=10 ip=192.168.120.10 netmask=255.255.255.0 ks=http://192.168.120.1:8888/c7_ks.cfg
# ^  ^  ^  ^  ^
#  I AM SKIPPING THIS PROCESS and folks will have to manually
#  type 1 line when the FIRST VM boots for the first time.
#
# Our local "boot-strap" server is our laptop and it will have a private IP of 192.168.120.1
#
# Our Kickstart environment will have a private network of 192.168.120.0/24  (254 IP's usable)
#
# Our Kickstart server will be 192.168.120.10
#
# Our VM's will be in the 192.168.120.100-192.168.120.220 range.
#  Use 192.168.120.11 through 192.168.120.99 for static assignments in your testing,
#  or reserve the IP addresses in the dhcpd config.  Examples provided.
#
# Repo: https://github.com/ohdns/centos7_simple_kickstart.git
#
PATH=${PATH}:/Applications/VirtualBox.app/Contents/MacOS:/bin:/sbin:/usr/bin:/usr/sbin
VM0="c7_small_kickstart"
export PATH USER VM0



# Leaving some mental notes here so you can see where I was going with automating the full setup.
# This is not likely required for most people, as I am lazier than most.
# MOST of the manual steps in this file will move into Ansible.



######################################### Modify NetInstall ISO to grab our kickstart file automagically.
# maybe replace this in the NetInstall ISO:
#
#  linuxefi /images/pxeboot/vmlinuz inst.stage2=hd:LABEL=CentOS\x207\x20x86_64 quiet
# with
#  linuxefi /images/pxeboot/vmlinuz inst.stage2=hd:LABEL=CentOS\x207\x20x86_64 cmdline nicdelay=10 ip=192.168.120.10 netmask=255.255.255.0 ks=http://192.168.120.1:8888/c7_ks.cfg
#
######################################### Modify NetInstall ISO to grab our kickstart file automagically.

#########################################  OR

#########################################  Local PXE in VirtualBox to bootstrap the first KS VM automagically
#mkdir -p ${HOME}/.VirtualBox/TFTP/pxelinux.cfg ${HOME}/.VirtualBox/TFTP/netboot
#cp ~/build/centos7_simple_kickstart/www/html/mirror/centos/7/os/x86_64/isolinux/* ${HOME}/.VirtualBox/TFTP/
#
# yuck, this is actually harder than just typing one line.  what a mess.
#########################################  Local PXE in VirtualBox to bootstrap the first KS VM automagically

#########################################  OR

######################################### Convert the NetBoot ISO into a disk image, some day maybe.
#if [ ! -s ~/build/centos7_simple_kickstart/isos/c7netboot.vdi ] ; then
#VBoxManage convertfromraw -format VDI ~/build/centos7_simple_kickstart/isos/c7netboot.iso ~/build/centos7_simple_kickstart/isos/c7netboot.vdi
#fi
######################################### Convert the NetBoot ISO into a disk image, some day maybe.




######################################### Create vboxnet0 local interface
# VBox is slow to instantiate the interfaces and will return a result code before it completes...
for vboxnet in `seq 3`
do
VBOXNETEXISTS=`VBoxManage list -l hostonlyifs | grep -c vboxnet0`
if [ ${VBOXNETEXISTS} -lt 1 ] ; then
  printf "\n\nCreating HostOnlyIF\n"
  VBoxManage hostonlyif create
  sleep ${vboxnet}
fi
done
#
for net0ip in `seq 3`
do
VBOXNETCONFIGURED=`VBoxManage list -l hostonlyifs | grep -c "192\.168\.120\.1"`
if [ ${VBOXNETCONFIGURED} -lt 1 ] ; then
  printf "Setting vboxnet0 to 192.168.120.1 netmask 255.255.255.0\n\n"
  VBoxManage hostonlyif ipconfig vboxnet0 --ip 192.168.120.1 --netmask 255.255.255.0
  VBoxManage dhcpserver remove --netname HostInterfaceNetworking-vboxnet0
  sleep ${net0ip}
fi
done
######################################### Create vboxnet0 local interface





######################################### CENTOS EPEL Repo exist? Repo current? If not, create or update it.
RECENTSYNC=`find ${HOME}/build/centos7_simple_kickstart/www/html/mirror/ -name localsync.log -mtime -7 -type f 2>/dev/null | grep -c localsync`
if [ ! -d ${HOME}/build/centos7_simple_kickstart/www/html/mirror/centos/7/updates ] || [ ${RECENTSYNC} -lt 1 ] ; then
mkdir -p ${HOME}/build/centos7_simple_kickstart/www/html/mirror/centos/7/{os,updates,extras}
mkdir -p ${HOME}/build/centos7_simple_kickstart/www/html/mirror/epel/7/x86_64
mkdir -p ~/build/centos7_simple_kickstart/scripts ~/build/centos7_simple_kickstart/isos
rsync -auvH --progress --delay-updates --delete --delete-after mirrors.kernel.org::centos/7/isos/CentOS*Minimal*.iso ~/build/centos7_simple_kickstart/isos/.
rsync -auvH --progress --delay-updates --delete --delete-after --exclude=debug/ --exclude=drpms/ mirrors.kernel.org::centos/7/os/x86_64/. ${HOME}/build/centos7_simple_kickstart/www/html/mirror/centos/7/os/x86_64/.
rsync -auvH --progress --delay-updates --delete --delete-after --exclude=debug/ --exclude=drpms/ mirrors.kernel.org::centos/7/updates/x86_64/. ${HOME}/build/centos7_simple_kickstart/www/html/mirror/centos/7/updates/x86_64/.
rsync -auvH --progress --delay-updates --delete --delete-after --exclude=debug/ --exclude=drpms/ mirrors.kernel.org::centos/7/extras/x86_64/. ${HOME}/build/centos7_simple_kickstart/www/html/mirror/centos/7/extras/x86_64/.
rsync -auvH --progress --delay-updates --delete --delete-after --exclude=debug/ --exclude=drpms/ mirrors.cat.pdx.edu::fedora-epel/7/x86_64/. ${HOME}/build/centos7_simple_kickstart/www/html/mirror/epel/7/x86_64/.
date >> ${HOME}/build/centos7_simple_kickstart/www/html/mirror/localsync.log 
#
curl -A Mozilla -s https://wiki.centos.org/Manuals/ReleaseNotes/CentOS7 -o ${HOME}/build/centos7_simple_kickstart/www/html/mirror/c7_notes.html
shasum -a 256 ${HOME}/build/centos7_simple_kickstart/isos/CentOS*Minimal*.iso > ${HOME}/build/centos7_simple_kickstart/isos/.validate_iso.txt
NOTESUM=`egrep "CentOS.*Minimal.*\.iso" ${HOME}/build/centos7_simple_kickstart/www/html/mirror/c7_notes.html | awk -F ">" {'print $3'} | awk {'print $1'}`
LOCALSUM=`awk {'print $1'} ${HOME}/build/centos7_simple_kickstart/isos/.validate_iso.txt`
printf "\n\nChecksum of ISO from centos.org: ${NOTESUM}\nChecksum of Local ISO: ${LOCALSUM}\n\n"
fi
#
# DO NOT GET THESE FILES FROM A MIRROR.  Sorry, centos.org doesn't provide https on this site, derp.
if [ ! -f ${HOME}/build/centos7_simple_kickstart/www/html/mirror/RPM-GPG-KEY-CentOS-7 ] ; then
curl -A Mozilla -s http://mirror.centos.org/centos/7/os/x86_64/RPM-GPG-KEY-CentOS-7 -o ${HOME}/build/centos7_simple_kickstart/www/html/mirror/RPM-GPG-KEY-CentOS-7
chmod 1444 ${HOME}/build/centos7_simple_kickstart/www/html/mirror/RPM-GPG-KEY-CentOS-7
fi
if [ ! -f ${HOME}/build/centos7_simple_kickstart/www/html/mirror/RPM-GPG-KEY-EPEL-7 ] ; then
curl -A Mozilla -s https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7 -o ${HOME}/build/centos7_simple_kickstart/www/html/mirror/RPM-GPG-KEY-EPEL-7
chmod 1444 ${HOME}/build/centos7_simple_kickstart/www/html/mirror/RPM-GPG-KEY-EPEL-7
fi
######################################### CENTOS EPEL Repo exist? Repo current? If not, create or update it.







######################################### Configure TFTP, but this is also messy and requires installing more 3rd party crap.
#mkdir -p ${HOME}/.VirtualBox/TFTP/pxelinux.cfg ${HOME}/.VirtualBox/TFTP/netboot
#cp ~/build/centos7_simple_kickstart/www/html/mirror/centos/7/os/x86_64/isolinux/* ${HOME}/.VirtualBox/TFTP/
#
# yuck, this is actually harder than just typing one line.  what a mess.
######################################### Configure TFTP, but this is also messy and requires installing more 3rd party crap.





######################################### Start local web server on vboxnet0
mkdir -p ${HOME}/build/centos7_simple_kickstart/www/html
mkdir -p ${HOME}/build/centos7_simple_kickstart/logs
mkdir -p ${HOME}/build/centos7_simple_kickstart/tmp
chmod 0755 ${HOME}/build/centos7_simple_kickstart/www/html
chmod 0700 ${HOME}/build/centos7_simple_kickstart/tmp
cp ${HOME}/build/centos7_simple_kickstart/scripts/c7*cfg ${HOME}/build/centos7_simple_kickstart/www/html/
chmod 0644 ${HOME}/build/centos7_simple_kickstart/www/html/c7*cfg

cat << zzzAPACHEzzz > ${HOME}/build/centos7_simple_kickstart/scripts/httpd.conf
ServerTokens prod
PidFile ${HOME}/build/centos7_simple_kickstart/tmp/httpd.pid
ScoreBoardFile ${HOME}/build/centos7_simple_kickstart/tmp/.scoreboard
KeepAlive off
ServerRoot "/usr"
Listen 192.168.120.1:8888
LoadModule authz_core_module libexec/apache2/mod_authz_core.so
LoadModule log_config_module libexec/apache2/mod_log_config.so
LoadModule env_module libexec/apache2/mod_env.so
LoadModule setenvif_module libexec/apache2/mod_setenvif.so
LoadModule autoindex_module libexec/apache2/mod_autoindex.so
LoadModule dir_module libexec/apache2/mod_dir.so
LoadModule alias_module libexec/apache2/mod_alias.so
LoadModule unixd_module libexec/apache2/mod_unixd.so
Mutex sem
ServerAdmin root@localhost
ServerName 192.168.120.1
ServerLimit 10240
DirectoryIndex index.html
DocumentRoot "${HOME}/build/centos7_simple_kickstart/www/html"
<Directory "${HOME}/build/centos7_simple_kickstart/www">
options indexes
</Directory>
ErrorLog "${HOME}/build/centos7_simple_kickstart/logs/error.log"
LogLevel warn
LogFormat "%h %l %u %t \"%r\" %>s %b" common
CustomLog "${HOME}/build/centos7_simple_kickstart/logs/access.log" common
TraceEnable off
HostnameLookups off
ServerSignature off
EnableMMAP off
EnableSendfile off

zzzAPACHEzzz


/usr/sbin/httpd -T -f ${HOME}/build/centos7_simple_kickstart/scripts/httpd.conf -E ${HOME}/build/centos7_simple_kickstart/logs/apache_startup.log -k stop > /dev/null 2>&1
/usr/sbin/httpd -T -f ${HOME}/build/centos7_simple_kickstart/scripts/httpd.conf -E ${HOME}/build/centos7_simple_kickstart/logs/apache_startup.log -k stop > /dev/null 2>&1
if [ -s ${HOME}/build/centos7_simple_kickstart/httpd.pid ] ; then
kill -9 `cat ${HOME}/build/centos7_simple_kickstart/httpd.pid`
rm -f ${HOME}/build/centos7_simple_kickstart/httpd.pid
fi
sync
sleep 2
for patchy in `seq 5`
do
 APACHECOUNT=`sleep 1;sync;netstat -an | grep -c 8888`
 if [ ${APACHECOUNT} -lt 1 ] ; then
 /usr/sbin/httpd -T -f ${HOME}/build/centos7_simple_kickstart/scripts/httpd.conf -E ${HOME}/build/centos7_simple_kickstart/logs/apache_startup.log -k start
 sleep ${patchy}
 fi
done
#
######################################### Start local web server on vboxnet0



######################################### Start local rsync server on vboxnet0
cat << zzzRSYNCzzz > ${HOME}/build/centos7_simple_kickstart/scripts/rsyncd.conf
uid = ${USER}
use chroot = no
max connections = 127
lock file = ${HOME}/build/centos7_simple_kickstart/tmp/rsyncd.lock
log file = ${HOME}/build/centos7_simple_kickstart/logs/rsyncd.log
pid file = ${HOME}/build/centos7_simple_kickstart/tmp/rsyncd.pid 
syslog facility = local5
strict modes = false
hosts allow = 192.168.120.0/24
reverse lookup = no
timeout = 30
dont compress = *.gz *.tgz *.zip *.rpm *.bz2 *.7z *.rar *.jp* *.gif *.png *.mp*
#refuse options = checksum delete
refuse options = delete
[www]
list = true
comment = "www"
path = ${HOME}/build/centos7_simple_kickstart/www
read only = yes

zzzRSYNCzzz

for mysync in `seq 5`
do
RSYNCRUNNING=`sleep 1;sync;netstat -an | grep -c 10873`
if [ ${RSYNCRUNNING} -lt 1 ] ; then
rm -f ${HOME}/build/centos7_simple_kickstart/tmp/rsync*
rsync --daemon --ipv4 --address=192.168.120.1 --port=10873 --config=${HOME}/build/centos7_simple_kickstart/scripts/rsyncd.conf
sleep ${mysync}
fi
done
######################################### Start local rsync server on vboxnet0



######################################### Create kickstart server VM
# VM0, small kickstart VM with CentOS and EPEL repos, DHCPD, TFTP, HTTPD
printf "\n\nCreating ${VM0} in base folder ${HOME}/build/centos7_simple_kickstart/vm/${VM0}\n\n"
VBoxManage createvm --name ${VM0} --ostype RedHat_64 --basefolder ${HOME}/build/centos7_simple_kickstart/vm/${VM0} --register
if [ ! -d ${HOME}/build/centos7_simple_kickstart/vm/${VM0} ] ; then
mkdir -p ${HOME}/build/centos7_simple_kickstart/vm/${VM0}
fi
if [ ! -f ${HOME}/build/centos7_simple_kickstart/vm/${VM0}/${VM0}_os.vdi ] ; then
VBoxManage createhd --filename "${HOME}/build/centos7_simple_kickstart/vm/${VM0}/${VM0}_os.vdi" --size 4096 --variant Fixed
fi
if [ ! -f ${HOME}/build/centos7_simple_kickstart/vm/${VM0}/${VM0}_www.vdi ] ; then
VBoxManage createhd --filename "${HOME}/build/centos7_simple_kickstart/vm/${VM0}/${VM0}_www.vdi" --size 61240 --variant Fixed
fi
VBoxManage storagectl ${VM0} --name mysata --add sata --controller IntelAHCI --portcount 2 --hostiocache off
VBoxManage storageattach ${VM0} --storagectl mysata --port 0 --medium ${HOME}/build/centos7_simple_kickstart/vm/${VM0}/${VM0}_os.vdi --type hdd
VBoxManage storageattach ${VM0} --storagectl mysata --port 1 --medium ${HOME}/build/centos7_simple_kickstart/vm/${VM0}/${VM0}_www.vdi --type hdd

if [ -f ${HOME}/build/centos7_simple_kickstart/isos/CentOS-7-x86_64-NetInstall-1503.iso ] ; then
VBoxManage storagectl ${VM0} --name myide --add ide --controller PIIX4 --portcount 2 --hostiocache on
VBoxManage storageattach ${VM0} --storagectl myide --port 0 --device 0 --type dvddrive --medium ${HOME}/build/centos7_simple_kickstart/isos/CentOS-7-x86_64-NetInstall-1503.iso --type dvddrive --tempeject on
else
printf "\n\nThe NetInstall ISO ${HOME}/build/centos7_simple_kickstart/isos/CentOS-7-x86_64-NetInstall-1503.iso we expected appears to be missing.\n\n"
exit 2
fi

VBoxManage modifyvm ${VM0} --vrde off
VBoxManage modifyvm ${VM0} --usb off
VBoxManage modifyvm ${VM0} --clipboard disabled
#VBoxManage modifyvm ${VM0} --graphicscontroller none
VBoxManage modifyvm ${VM0} --memory 1536 --vram 12 --cpus 1 --cpuexecutioncap 80
VBoxManage modifyvm ${VM0} --firmware bios
VBoxManage modifyvm ${VM0} --audio none --chipset ich9
VBoxManage modifyvm ${VM0} --nic1 hostonly --hostonlyadapter1 vboxnet0 --nictype1 82545EM --macaddress1 auto
#VBoxManage modifyvm ${VM0} --nic2 intnet  --nictype2 82545EM --macaddress2 auto
VBoxManage modifyvm ${VM0} --nicpromisc1 allow-all
VBoxManage modifyvm ${VM0} --biospxedebug off
VBoxManage modifyvm ${VM0} --nicbootprio1 1
VBoxManage modifyvm ${VM0} --boot1 disk --boot2 dvd --boot3 none --boot4 none
#
######################################### Create kickstart server VM


VBoxManage startvm ${VM0}

printf "\n\nWhen the ISO boots, hit the TAB key, backspace over \"quiet\" and type:\n\tnicdelay=10 cmdline ip=192.168.120.10 netmask=255.255.255.0 ks=http://192.168.120.1:8888/c7_ks.cfg\n\n"

printf "\nReminder: the post install section will take a while as it is copying data from your mac yum repos.\n"

#read -n1 -r -p "Press the SPACE key to change the boot order to _disk only_." key
#if [ "$key" = ' ' ]; then
#VBoxManage modifyvm ${VM0} --boot1 disk --boot2 none --boot3 none --boot4 none
##  VBoxManage controlvm ${VM0} acpipowerbutton
#else
#  printf "\n\nKey other than space detected.  You will have to change boot order of ${VM0} manually.\n\n"
#fi


exit 0





# generate MAC ourselves so we can use it later if we need it.
#VM0MAC1=$(echo ${VM0}_${USER}_int1 | openssl md5 | awk {'print $NF'} | sed 's/^\(..\)\(..\)\(..\)\(..\)\(..\).*$/02:\1:\2:\3:\4:\5/')
#VM0MAC2=$(echo ${VM0}_${USER}_int2 | openssl md5 | awk {'print $NF'} | sed 's/^\(..\)\(..\)\(..\)\(..\)\(..\).*$/02:\1:\2:\3:\4:\5/')
#VM0MAC1_NOCOLON=`echo ${VM0MAC1} | sed s/\://g`
#VM0MAC2_NOCOLON=`echo ${VM0MAC2} | sed s/\://g`
#VM0MAC1_HYPHEN=`echo ${VM0MAC1} | sed s/\:/\-/g`
#VM0MAC2_HYPHEN=`echo ${VM0MAC2} | sed s/\:/\-/g`
#

